input {
    udp {
        port => 514
        type => "syslog"
    }
}

filter {
    if [type] == "syslog" {
        grok {
            match => { "message" => "(?:%{SYSLOGTIMESTAMP:syslog_timestamp}|%{TIMESTAMP_ISO8601:syslog_timestamp}) %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\/%{DATA:container_name}\/%{DATA:container_id})?(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
        remove_field => ["message"]
        }

        syslog_pri { }

        date {
            match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601" ]
        }

        if "_grokparsefailure" not in [tags] {
            kv {
                source => "syslog_message"
            }

            ruby {
                code => '
                require "snmp"

                msg = event.get("message")
                puts "GOT: #{msg}"
                ipaddr = event.get("ipaddr")

                begin
                    puts "ipaddr = #{ipaddr}"
                    SNMP::Manager.open(:Host => "#{ipaddr}",:Version => :SNMPv2c) do |snmp|
                        x = snmp.trap_v2(
                            666,
                            "1.3.6.1.4.1.10300.1.1.1.12",
                            [
                                SNMP::VarBind.new("1.3.6.1.2.1.1.5.0",SNMP::OctetString.new("Your system got hacked")),
                                SNMP::VarBind.new("1.3.6.1.2.1.1.5.0",SNMP::OctetString.new("ROGUE AP FOUND!")),
                                SNMP::VarBind.new("1.3.6.1.2.1.1.5.0",SNMP::OctetString.new("ROGUE AP LOST!")),
                            ]
                        )
                    end
                rescue Exception => e
                    puts "EXCEPTION error: " + e.message
                end

                '
            }
        }
    }
}

output {
    stdout {
        codec => rubydebug
    }

    syslog {
        port => 514
        host => "graylog"
        protocol => "udp"
    }

    if [type] == "syslog" and "_grokparsefailure" in [tags] {
        file { path => "/tmp/failed_syslog_events-%{+YYYY-MM-dd}" }
    }
}
