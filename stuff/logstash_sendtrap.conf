input {
  udp {
    port => 514
    type => "syslog"
  }

  #snmptrap {
  #  type => "snmptrap"
  #  community => "public"
  #  host => "0.0.0.0"
  #  port => 169
  #  type => "snmptrap"
  #}

}

filter {
    #grok {
    #  #match => [ "message", "%{SYSLOGBASE} (?<header>[^\t]+)(?:\t%{GREEDYDATA:varbind})?" ]
    #  match => [ "message", "(?<header>[^\t]+)(?:\t%{GREEDYDATA:varbind})?" ]
    #}

    #date {
    #  match => [ "timestamp", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss", "ISO8601" ]
    #}

    #if [varbind] {
      #kv {
        #field_split => "\t"
        #value_split => "="
        #trim_value => " \""
        #trim_key => " "
        #source => [ "varbind" ]
        #target => "vb"
      #}

      #ruby {
      #  code => "event.remove('vb').each { |k,v| event[k.gsub(/^.*::([^\.]+)\..*$/, '\1')] = v }"
      #  remove_field => "varbind"
      #}
    #}
}

output {
  stdout {
    codec => rubydebug
  }

  syslog {
    port => 514
    host => "graylog"
    protocol => "udp"
  }

  if [type] == "syslog" and "_grokparsefailure" in [tags] {
    file { path => "/tmp/failed_syslog_events-%{+YYYY-MM-dd}" }
  }


  #############
  # snmptrap -v1 -c public demo.snmplabs.com 1.3.6.1.4.1.20408.4.1.1.2 0.0.0.0 1 0 0 1.3.6.1.2.1.1.1.0 s "my system"
  ####################

  snmptrap {
    host => "192.168.1.228"
    port => 162
    community => "public"
    #oid => "1.3.6.1.4.1.20408.4.1.1.2 0.0.0.0"
    #oid => "1.3.6.1.4.1.20408.4.1.1.2 0.0.0.0 1 0 0 1.3.6.1.2.1.1.1.0 s \"my system\""

    #oid => "1.3.6.1.2.1.1.1.0"
     oid => "0.0.0.0.0.0.0.0.0"
  }

}
